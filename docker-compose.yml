version: "3.8"

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: dev  # Uses dev stage from Dockerfile  use this if production enviroments [prod]  
    ports:
      - "5050:5050"
    volumes:
      - ./server:/app
      - /app/node_modules  # Prevents host node_modules from overwriting container's
    env_file:
      - ./server/.env
    command: ["npm","run","dev","--legacy-watch"]
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:15-alpine  # Smaller Alpine-based image
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: adarsh2060
      POSTGRES_DB: e-commerce
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge